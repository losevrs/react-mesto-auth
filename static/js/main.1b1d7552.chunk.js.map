{"version":3,"sources":["components/Header.js","components/UIelements/ImageWithError.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/popups/Popup.js","components/popups/PopupWithForm.js","components/UIelements/InputWithBrowserValidation.js","components/popups/EditProfilePopup.js","components/popups/EditAvatarPopup.js","components/popups/AddPlacePopup.js","components/popups/ConfirmPopup.js","components/popups/ImagePopup.js","components/forms/SignForm.js","components/forms/SignInForm/SignInForm.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/header/logo.svg","images/onerror.jpg"],"names":["className","src","logo","alt","props","React","useState","hasOnLoadError","setHasOnLoadError","useEffect","errorImage","onError","onClick","CurrentUserContext","createContext","useCurrentUserContext","useContext","CurrentUserContextProvider","Provider","value","children","card","onCardClick","onCardLike","onCardDelete","currentUser","canAddDelete","owner","_id","likeShow","likes","some","item","ImageWithError","link","type","name","length","handleAddPlaceClick","onAddPlace","bind","handleEditProfileClick","onEditProfile","handleEditAvatarClick","onEditAvatar","isHidden","avatar","about","cards","map","Card","key","popupOverlay","useRef","handleEscClose","useCallback","event","onClose","isOpened","document","addEventListener","removeEventListener","onMouseDown","target","current","ref","enabled","undefined","buttonEnabled","Popup","action","method","noValidate","onSubmit","title","disabled","buttonTitle","isValid","setIsValid","validationMessage","setValidationMessage","input","validity","valid","onButtonStatusChange","wrapClasses","placeholder","onChange","required","minLength","maxLength","isTouched","userName","setUserName","userNameIsValid","setUserNameIsValid","isUserNameTouched","setIsUserNameTouched","description","setDescription","descriptionIsValid","setDescriptionIsValid","isDescriptionTouched","setIsDescriptionTouched","PopupWithForm","preventDefault","onUpdateUser","InputWithBrowserValidation","userAvatar","setUserAvatar","userAvatarIsValid","setUserAvatarIsValid","isAvatarTouched","setIsAvatarTouched","resetInput","onUpdateAvatar","setName","nameIsValid","setNameIsValid","isNameTouched","setIsNameTouched","setLink","linkIsValid","setLinkIsValid","isLinkTouched","setIsLinkTouched","resetInputs","onCreateCard","onConfirm","href","onRefClick","linkText","userEmail","setUserEmail","userEmailIsValid","setUserEmailIsValid","isUserEmailTouched","setIsUserEmailTouched","userPassword","setUserPassword","userPasswordIsValid","setUserPasswordIsValid","isUserPasswordTouched","setIsUserPasswordTouched","SignForm","isSignFormOpen","api","options","this","_options","urlSuffix","body","fetch","baseUrl","headers","authorization","JSON","stringify","then","response","ok","json","Promise","reject","status","_serverRequest","profile","cardId","likeOn","metod","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","isSignInFormOpen","setIsSignInFormOpen","isSignUpFormOpen","setIsSignUpFormOpen","setCurrentUser","setCards","setIsHidden","isSaving","setIsSaving","all","getUserInfo","getInitialCards","userInfo","initialCards","catch","error","console","log","finally","closeAllPopups","Header","SignInForm","Main","isLiked","like","newCard","newCards","c","Footer","EditProfilePopup","saveProfile","EditAvatarPopup","saveAvatar","AddPlacePopup","saveCard","cardData","ConfirmPopup","deleteCard","index","findIndex","splice","ImagePopup","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.1b1d7552.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/header/logo.svg';\r\n\r\nexport default () => {\r\n    return (\r\n      <header className='header' >\r\n        <img className='header__logo'\r\n          src={logo}\r\n          alt='Логотип' />\r\n      </header>\r\n    );\r\n}","import React from 'react'\r\nimport errorImage from '../../images/onerror.jpg';\r\n\r\nexport default (props) => {\r\n\r\n  const [hasOnLoadError, setHasOnLoadError] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setHasOnLoadError(false);\r\n  },[props.src]);\r\n\r\n  const onLoadImageError = () => {\r\n    setHasOnLoadError(true);\r\n  }\r\n\r\n  return (\r\n    <img className={props.className}\r\n      src={hasOnLoadError ? errorImage : props.src}\r\n      alt={props.alt}\r\n      onError={onLoadImageError}\r\n      onClick={props.onClick} />\r\n  );\r\n}","import React, { useContext } from 'react'\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport const useCurrentUserContext = () => {\r\n  return useContext(CurrentUserContext);\r\n}\r\n\r\nexport const CurrentUserContextProvider = (props) => {\r\n  return (\r\n    <CurrentUserContext.Provider value={props.value}>\r\n      {props.children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}","import React from 'react';\r\nimport ImageWithError from './UIelements/ImageWithError'\r\n\r\nimport { useCurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nexport default ({card, onCardClick, onCardLike, onCardDelete}) => {\r\n  const currentUser = useCurrentUserContext();\r\n\r\n  const canAddDelete = card.owner._id === currentUser._id;\r\n  const likeShow = card.likes.some((item) => { return item._id === currentUser._id; });\r\n\r\n  const handleCardClick = () => {\r\n    onCardClick(card);\r\n  }\r\n\r\n  const handleCardLike = () => {\r\n    onCardLike(card);\r\n  }\r\n\r\n  const handleCardDelete = () => {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <div className='photocard'>\r\n      <ImageWithError className='photocard__viewport'\r\n        src={card.link}\r\n        alt='Фото места'\r\n        onClick={handleCardClick}\r\n        onError={null} />\r\n\r\n      <button className={`photocard__delete ${canAddDelete && 'photocard__delete_show'}`}\r\n        type='button'\r\n        onClick={handleCardDelete}\r\n      />\r\n\r\n      <div className='photocard__description'>\r\n        <h2 className='photocard__placename'>{card.name}</h2>\r\n        <div className='photocard__likes'>\r\n          <button className={`photocard__like ${likeShow && 'photocard__like_on'}`}\r\n            type='button'\r\n            onClick={handleCardLike}\r\n          />\r\n          <span className='photocard__count'>{card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ImageWithError from './UIelements/ImageWithError'\r\n\r\nimport Card from './Card';\r\nimport { useCurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nexport default (props) => {\r\n\r\n  const handleAddPlaceClick = props.onAddPlace.bind(this);\r\n  const handleEditProfileClick = props.onEditProfile.bind(this);\r\n  const handleEditAvatarClick = props.onEditAvatar.bind(this);\r\n\r\n  const currentUser = useCurrentUserContext();\r\n\r\n  return (\r\n    <main className='main'>\r\n      <section className={`profile ${props.isHidden && 'profile_hidden'}`}>\r\n        <div className='profile__avatar-overlay'\r\n          onClick={handleEditAvatarClick} >\r\n          <ImageWithError className='profile__avatar'\r\n            src={currentUser.avatar}\r\n            alt='Аватар пользователя' />\r\n        </div>\r\n        <div className='profile__info'>\r\n          <div className='profile__title'>\r\n            <h1 className='profile__name'>{currentUser.name}</h1>\r\n            <button className='profile__editbutton'\r\n              onClick={handleEditProfileClick}\r\n              type='button' />\r\n          </div>\r\n          <p className='profile__about'>{currentUser.about}</p>\r\n        </div>\r\n        <button className='profile__addbutton'\r\n          onClick={handleAddPlaceClick}\r\n          type='button' />\r\n      </section>\r\n\r\n      <section className='placesphotos'>\r\n        {props.cards.map(card =>\r\n          <Card key={card._id}\r\n            card={card}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />)}\r\n      </section>\r\n    </main>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n      <footer className='footer'>\r\n        <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\r\n      </footer>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n  const popupOverlay = React.useRef(null);\r\n\r\n  const closeOnOverlayClick = (event) => {\r\n    if (event.target === popupOverlay.current) {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  const handleEscClose = React.useCallback((event) => {\r\n    if (event.key === 'Escape') {\r\n      props.onClose();\r\n    }\r\n    // eslint-disable-next-line\r\n  },[]);\r\n\r\n  React.useEffect(() => {\r\n    props.isOpened \r\n    ? document.addEventListener('keydown', handleEscClose)\r\n    : document.removeEventListener('keydown', handleEscClose);\r\n    // eslint-disable-next-line\r\n  }, [props.isOpened]);\r\n\r\n  return (\r\n    <section className={`popup popup_${props.name} ${props.isOpened && 'popup_opened'}`}\r\n      onMouseDown={closeOnOverlayClick}\r\n      ref={popupOverlay}>\r\n      {props.children}\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\nimport Popup from './Popup';\r\n\r\nexport default (props) => {\r\n\r\n  let enabled = true; // если извне статус не задан - значит не учитываем его\r\n  if (props.buttonEnabled !== undefined) {\r\n    enabled = props.buttonEnabled;\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      name={props.name}\r\n      isOpened={props.isOpened}\r\n      onClose={props.onClose}>\r\n      <form className='popup__container'\r\n        action='#'\r\n        method='POST'\r\n        name={`${props.name}`}\r\n        noValidate \r\n        onSubmit={props.onSubmit}>\r\n        <h2 className='popup__title'>{`${props.title}`}</h2>\r\n\r\n        {props.children}\r\n\r\n        <button \r\n          className={`popup__submit ${enabled ? '' : 'popup__submit_disabled'}`}\r\n          disabled={enabled ? '' : 'disabled'}\r\n          type='submit'>{props.buttonTitle}</button>\r\n        <button className='popup__reset'\r\n          type='button'\r\n          onClick={props.onClose} />\r\n      </form>\r\n    </Popup>\r\n  );\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nexport default (props) => {\r\n\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [validationMessage, setValidationMessage] = useState('None');\r\n\r\n  let input = useRef(null);\r\n\r\n  const validate = () => {\r\n    if (input.current) {\r\n      setIsValid(input.current.validity.valid);\r\n      setValidationMessage(input.current.validationMessage);\r\n      if (props.onButtonStatusChange !== undefined) {\r\n        props.onButtonStatusChange(input.current.validity.valid);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  });\r\n\r\n  return (\r\n    <div className={props.wrapClasses}>\r\n      <input\r\n        className={props.className}\r\n        type={props.type}\r\n        name={props.name}\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        required={props.required ? true : false}\r\n        minLength={props.minLength}\r\n        maxLength={props.maxLength}\r\n        ref={input}\r\n      />\r\n      <span className={`popup__input_type_error ${(!isValid && props.isTouched) ? 'popup__error_visible' : ''}`}>\r\n        {validationMessage}\r\n      </span>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nimport InputWithBrowserValidation from '../UIelements/InputWithBrowserValidation';\r\n\r\nimport { useCurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nexport default props => {\r\n\r\n  const currentUser = useCurrentUserContext();\r\n\r\n  const [userName, setUserName] = React.useState(currentUser.name);\r\n  const [userNameIsValid, setUserNameIsValid] = React.useState(true);\r\n  const [isUserNameTouched, setIsUserNameTouched] = React.useState(false);\r\n\r\n  const [description, setDescription] = React.useState(currentUser.about);\r\n  const [descriptionIsValid, setDescriptionIsValid] = React.useState(true);\r\n  const [isDescriptionTouched, setIsDescriptionTouched] = React.useState(false);\r\n\r\n  const buttonEnabled = userNameIsValid && descriptionIsValid;\r\n\r\n  React.useEffect(() => {\r\n    setUserName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  const handleChangeName = (event) => {\r\n    setIsUserNameTouched(true);\r\n    setUserName(event.target.value);\r\n  }\r\n\r\n  const handleChangeDescription = (event) => {\r\n    setIsDescriptionTouched(true);\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.onUpdateUser({\r\n      name: userName,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name='profileedit'\r\n      title='Редактировать профиль'\r\n      buttonTitle={props.buttonTitle}\r\n      buttonEnabled={buttonEnabled}\r\n      isOpened={props.isOpened}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}>\r\n\r\n      <InputWithBrowserValidation\r\n        className='popup__input popup__input_name popup__input_top'\r\n        type='text'\r\n        name='name'\r\n        placeholder='Имя'\r\n        value={userName}\r\n        onChange={handleChangeName}\r\n        required\r\n        minLength='2'\r\n        maxLength='40'\r\n        isTouched={isUserNameTouched}\r\n        onButtonStatusChange={setUserNameIsValid}\r\n      />\r\n\r\n      <InputWithBrowserValidation className='popup__input popup__input_about'\r\n        type='text'\r\n        name='about'\r\n        onChange={handleChangeDescription}\r\n        placeholder='Описание'\r\n        value={description}\r\n        required\r\n        minLength='2'\r\n        maxLength='200'\r\n        isTouched={isDescriptionTouched}\r\n        onButtonStatusChange={setDescriptionIsValid}\r\n      />\r\n\r\n    </PopupWithForm>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport PopupWithForm from './PopupWithForm';\r\nimport InputWithBrowserValidation from '../UIelements/InputWithBrowserValidation';\r\n\r\nexport default props => {\r\n\r\n  const [userAvatar, setUserAvatar] = useState('');\r\n  const [userAvatarIsValid, setUserAvatarIsValid] = useState(true);\r\n  const [isAvatarTouched, setIsAvatarTouched] = useState(false);\r\n\r\n  const buttonEnabled = userAvatarIsValid;\r\n\r\n  const resetInput = () => {\r\n    setUserAvatar('');\r\n    setIsAvatarTouched(false);\r\n  }\r\n\r\n  const handleChangeAvatar = (event) => {\r\n    setIsAvatarTouched(true);\r\n    setUserAvatar(event.target.value);\r\n  }\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.onUpdateAvatar({\r\n      avatar: userAvatar\r\n    });\r\n    resetInput();\r\n  }\r\n\r\n  const handleOnClose = () => {\r\n    props.onClose();\r\n    resetInput();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name='newavatar'\r\n      title='Обновить аватар'\r\n      buttonTitle={props.buttonTitle}\r\n      buttonEnabled={buttonEnabled}\r\n      isOpened={props.isOpened}\r\n      onClose={handleOnClose}\r\n      onSubmit={handleSubmit}>\r\n\r\n      <InputWithBrowserValidation\r\n        className='popup__input popup__input_top'\r\n        type='url'\r\n        name='avatar'\r\n        placeholder='Ссылка на картинку'\r\n        value={userAvatar}\r\n        onChange={handleChangeAvatar}\r\n        required\r\n        isTouched={isAvatarTouched}\r\n        onButtonStatusChange={setUserAvatarIsValid}\r\n      />\r\n\r\n    </PopupWithForm>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport PopupWithForm from './PopupWithForm';\r\nimport InputWithBrowserValidation from '../UIelements/InputWithBrowserValidation';\r\n\r\nexport default props => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [nameIsValid, setNameIsValid] = useState(true);\r\n  const [isNameTouched, setIsNameTouched] = useState(false);\r\n\r\n  const [link, setLink] = useState('');\r\n  const [linkIsValid, setLinkIsValid] = useState(true);\r\n  const [isLinkTouched, setIsLinkTouched] = useState(false);\r\n\r\n  const buttonEnabled = nameIsValid && linkIsValid;\r\n\r\n  const resetInputs = () => {\r\n    setName('');\r\n    setLink('');\r\n    setIsNameTouched(false);\r\n    setIsLinkTouched(false);\r\n  }\r\n\r\n  const handleChangeName = (event) => {\r\n    setIsNameTouched(true);\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const handleChangeLink = (event) => {\r\n    setIsLinkTouched(true);\r\n    setLink(event.target.value);\r\n  }\r\n\r\n  const handleOnClose = () => {\r\n    props.onClose();\r\n    resetInputs();\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.onCreateCard({\r\n      name,\r\n      link\r\n    });\r\n    props.onClose();\r\n    resetInputs();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name='newplace'\r\n      title='Новое место'\r\n      buttonTitle={props.buttonTitle}\r\n      buttonEnabled={buttonEnabled}\r\n      isOpened={props.isOpened}\r\n      onClose={handleOnClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n\r\n      <InputWithBrowserValidation\r\n        className='popup__input popup__input_photoname popup__input_top'\r\n        type='text'\r\n        name='photoName'\r\n        placeholder='Название'\r\n        value={name}\r\n        onChange={handleChangeName}\r\n        required\r\n        minLength='1'\r\n        maxLength='30'\r\n        isTouched={isNameTouched}\r\n        onButtonStatusChange={setNameIsValid}\r\n      />\r\n\r\n      <InputWithBrowserValidation\r\n        className='popup__input popup__input_photourl'\r\n        type='url'\r\n        name='photoUrl'\r\n        placeholder='Ссылка на картинку'\r\n        value={link}\r\n        onChange={handleChangeLink}\r\n        required\r\n        isTouched={isLinkTouched}\r\n        onButtonStatusChange={setLinkIsValid}\r\n      />\r\n\r\n    </PopupWithForm>\r\n  );\r\n}","import React from 'react'\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default props => {\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.onConfirm();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name='confirm'\r\n      title='Вы уверены?'\r\n      buttonTitle={props.buttonTitle}\r\n      isOpened={props.isOpened}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport Popup from './Popup';\r\nimport ImageWithError from '../UIelements/ImageWithError'\r\n\r\nexport default (props) => {\r\n  return (\r\n    <Popup\r\n      name='view'\r\n      isOpened={props.isOpened}\r\n      onClose={props.onClose}>\r\n      <div className='popup__photoview'>\r\n        <ImageWithError className='popup__image'\r\n          alt='Просмотр фото'\r\n          src={props.card.link}/>\r\n        <h2 className='popup__imagetitle'>{props.card.name}</h2>\r\n        <button className='popup__reset'\r\n          type='button'\r\n          onClick={props.onClose} />\r\n      </div>\r\n    </Popup>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default (props) => {\r\n\r\n  let enabled = true;\r\n  if (props.buttonEnabled !== undefined) {\r\n    enabled = props.buttonEnabled;\r\n  }\r\n\r\n  return (\r\n    <form className='signform'\r\n      action='#'\r\n      method='POST'\r\n      name={`${props.name}`\r\n      }\r\n      noValidate\r\n      onSubmit={props.onSubmit} >\r\n\r\n      <h2 className='signform__title'>{`${props.title}`}</h2>\r\n\r\n      { props.children}\r\n\r\n      <button\r\n        className={`signform__submit ${enabled ? '' : 'signform__submit_disabled'}`}\r\n        disabled={enabled ? '' : 'disabled'}\r\n        type='submit'>{props.buttonTitle}</button>\r\n\r\n      <a href='#' className='signform__link' onClick={props.onRefClick}>{props.linkText}</a>\r\n\r\n    </form >\r\n  );\r\n}\r\n","import React from 'react'\r\nimport SignForm from '../SignForm';\r\nimport InputWithBrowserValidation from '../../UIelements/InputWithBrowserValidation';\r\n\r\nexport default props => {\r\n  const [userEmail, setUserEmail] = React.useState('');\r\n  const [userEmailIsValid, setUserEmailIsValid] = React.useState(true);\r\n  const [isUserEmailTouched, setIsUserEmailTouched] = React.useState(false);\r\n\r\n  const [userPassword, setUserPassword] = React.useState('');\r\n  const [userPasswordIsValid, setUserPasswordIsValid] = React.useState(true);\r\n  const [isUserPasswordTouched, setIsUserPasswordTouched] = React.useState(false);\r\n\r\n  const buttonEnabled = userEmailIsValid && userPasswordIsValid;\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setIsUserEmailTouched(true);\r\n    setUserEmail(event.target.value);\r\n  }\r\n\r\n  const handleChangePassword = (event) => {\r\n    setIsUserPasswordTouched(true);\r\n    setUserPassword(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <SignForm\r\n      isOpened={props.isSignFormOpen}\r\n      title='Вход'\r\n      buttonTitle='Войти'\r\n      buttonEnabled={buttonEnabled}\r\n      linkText=\"Ещё не зарегистрированы? Регистрация\"\r\n    >\r\n\r\n      <InputWithBrowserValidation\r\n        className='signform__input popup__input_email'\r\n        wrapClasses='signform__inputdiv'\r\n        type='email'\r\n        name='email'\r\n        placeholder='Email'\r\n        value={userEmail}\r\n        onChange={handleChangeEmail}\r\n        required\r\n        maxLength='40'\r\n        isTouched={isUserEmailTouched}\r\n        onButtonStatusChange={setUserEmailIsValid}\r\n      />\r\n\r\n      <InputWithBrowserValidation\r\n        className='signform__input popup__input_password'\r\n        wrapClasses='signform__inputdiv'\r\n        type='password'\r\n        name='password'\r\n        placeholder='Пароль'\r\n        value={userPassword}\r\n        onChange={handleChangePassword}\r\n        required\r\n        maxLength='40'\r\n        isTouched={isUserPasswordTouched}\r\n        onButtonStatusChange={setUserPasswordIsValid}\r\n      />\r\n\r\n    </SignForm>);\r\n}","class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  // Запрос к серверу - по умолчанию GET\n  _serverRequest(urlSuffix, method = 'GET', body = undefined) {\n    return fetch(this._options.baseUrl + urlSuffix, {\n      method: method,\n      headers: {\n        authorization: this._options.headers.authorization,\n        'Content-Type': this._options.headers['Content-Type']\n      },\n      body: JSON.stringify(body)\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(`Ошибка: ${response.status}`);\n      });\n  }\n\n  // Профиль пользователя\n  getUserInfo() {\n    return this._serverRequest('users/me');\n  }\n\n  saveProfile(profile) {\n    return this._serverRequest('users/me', 'PATCH', profile);\n  }\n\n  saveAvatar(avatar) {\n    return this._serverRequest('users/me/avatar', 'PATCH', avatar);\n  }\n\n  // Инициализация карточек\n  getInitialCards() {\n    return this._serverRequest('cards');\n  }\n\n  saveCard(card) {\n    return this._serverRequest('cards', 'POST', card);\n  }\n\n  deleteCard(cardId) {\n    return this._serverRequest('cards/' + cardId, 'DELETE');\n  }\n\n  // Лайки\n  like(cardId, likeOn = true) {\n    const metod = likeOn ? 'PUT' : 'DELETE';\n    return this._serverRequest('cards/likes/' + cardId, metod);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/',\n  headers: {\n    authorization: '44e5d6af-1500-4757-9283-b4dfbe9e13fc',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport {api}","import React from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './popups/EditProfilePopup';\nimport EditAvatarPopup from './popups/EditAvatarPopup';\nimport AddPlacePopup from './popups/AddPlacePopup';\nimport ConfirmPopup from './popups/ConfirmPopup';\nimport ImagePopup from './popups/ImagePopup';\nimport SignInForm from './forms/SignInForm/SignInForm';\n\nimport { api } from '../utils/Api';\n\nimport { CurrentUserContextProvider } from '../contexts/CurrentUserContext';\n\nexport default () => {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  \n  const [isSignInFormOpen, setIsSignInFormOpen] = React.useState(true);\n  const [isSignUpFormOpen, setIsSignUpFormOpen] = React.useState(true);\n\n  // Стейты для Main\n  const [currentUser, setCurrentUser] = React.useState({ name: '', about: '' });\n  const [cards, setCards] = React.useState([]);\n  const [isHidden, setIsHidden] = React.useState(true); //Видимость профиля в Main\n\n  const [isSaving, setIsSaving] = React.useState(false);\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userInfo, initialCards]) => {\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((error) => console.log('Ошибка запроса : ', error))\n      .finally(() => {\n        setIsHidden(false);\n      });\n  }, []);\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((item) => { return item._id === currentUser._id; });\n\n    api.like(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((error) => console.log('Ошибка обработки лайка : ', error))\n  }\n\n  const handleCardConfirm = (card) => {\n    setSelectedCard(card);\n    setIsConfirmPopupOpen(true);\n  }\n\n  const handleCardDelete = () => {\n    setIsSaving(true);\n    api.deleteCard(selectedCard._id)\n      .then(() => {\n        const newCards = [...cards];\n        const index = newCards.findIndex((item) => { return item._id === selectedCard._id });\n        if (index >= 0) {\n          newCards.splice(index, 1);\n          setCards(newCards);\n        }\n        closeAllPopups();\n      })\n      .catch((error) => console.log('Ошибка удаления карточки : ', error));\n  }\n\n  const handleUpdateUser = ({ name, about }) => {\n    setIsSaving(true);\n    api.saveProfile({ 'name': name, 'about': about })\n      .then((userInfo) => {\n        setCurrentUser(userInfo);\n        closeAllPopups();\n      })\n      .catch((error) => console.log('Ошибка изменения данных пользователя : ', error));\n  }\n\n  const handleUpdateAvatar = ({ avatar }) => {\n    setIsSaving(true);\n    api.saveAvatar({ 'avatar': avatar })\n      .then((userInfo) => {\n        setCurrentUser(userInfo);\n        closeAllPopups();\n      })\n      .catch((error) => console.log('Ошибка изменения аватара пользователя : ', error));\n  }\n\n  const handleCreateCard = (card) => {\n    setIsSaving(true);\n    api.saveCard(card)\n      .then((cardData) => {\n        if (cardData) {\n          setCards([\n            cardData,\n            ...cards\n          ]);\n        }\n      })\n      .catch((error) => console.log('Ошибка создания карточки : ', error));\n  }\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setIsSaving(false);\n    setSelectedCard({});\n    setIsSignInFormOpen(false);\n    setIsSignUpFormOpen(false);\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  return (\n    <div className='page'>\n      <CurrentUserContextProvider value={currentUser}>\n        <Header />\n\n        {!isSignInFormOpen || !isSignUpFormOpen\n          ? <><Main onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardConfirm}\n            isHidden={isHidden}\n            cards={cards}\n          />\n          <Footer /></>\n          : <SignInForm\n            isOpened={isSignInFormOpen}\n          />\n        }\n\n        <EditProfilePopup\n          isOpened={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          buttonTitle={isSaving ? 'Сохранение...' : 'Сохранить'}\n        />\n\n        <EditAvatarPopup\n          isOpened={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          value={currentUser.avatar}\n          buttonTitle={isSaving ? 'Сохранение...' : 'Сохранить'}\n        />\n\n        <AddPlacePopup\n          isOpened={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onCreateCard={handleCreateCard}\n          buttonTitle={isSaving ? 'Сохранение...' : 'Сохранить'}\n        />\n\n        <ConfirmPopup\n          onConfirm={handleCardDelete}\n          onClose={closeAllPopups}\n          isOpened={isConfirmPopupOpen}\n          buttonTitle={isSaving ? 'Сохранение...' : 'Да'}\n        />\n\n        <ImagePopup\n          card={selectedCard}\n          isOpened={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n\n      </CurrentUserContextProvider>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.register();\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/onerror.a6166131.jpg\";"],"sourceRoot":""}